{"version":3,"sources":["../../../src/components/MessageList/index.js"],"names":["mapStateToProps","messages","MessageList","props","state","offset","console","log","targetOffset","_ref","children","reduce","acc","curr","offsetHeight","scrollTop","ImageComponent","MessageComponent","ref","map","message","i","Component","PropTypes","object","oneOfType","element","func"],"mappings":";;;;;;;;;;AACA;;;;AACA;;AACA;;;;AAEA;;;;;;;;;;+eALA;;;AAOA,IAAMA,kBAAkB,SAAlBA,eAAkB,OAAkB;AAAA,QAAfC,QAAe,QAAfA,QAAe;;AACtC,WAAO,EAAEA,UAAUA,SAASA,QAArB,EAAP;AACH,CAFD;;IAIMC,W;;;AACF,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA,8HACTA,KADS;;AAEf,cAAKC,KAAL,GAAa;AACTC,oBAAQ;AADC,SAAb;AAFe;AAKlB;;;;6CAEoB;AACjBC,oBAAQC,GAAR,CAAY,UAAZ;AACA,gBAAIC,eAAe,6BAAI,KAAKC,IAAL,CAAUC,QAAd,GAAwBC,MAAxB,CACf,UAACC,GAAD,EAAMC,IAAN;AAAA,uBAAeD,MAAMC,KAAKC,YAA1B;AAAA,aADe,EAEf,CAFe,CAAnB;AAIA,iBAAKL,IAAL,CAAUM,SAAV,GAAsBP,YAAtB;AACH;;;iCAEQ;AAAA;;AAAA,yBACgD,KAAKL,KADrD;AAAA,gBACCF,QADD,UACCA,QADD;AAAA,gBACWe,cADX,UACWA,cADX;AAAA,gBAC2BC,gBAD3B,UAC2BA,gBAD3B;;AAEL,mBACI;AAAA;AAAA,kBAAI,WAAU,uBAAd,EAAsC,KAAK;AAAA,+BAAQ,OAAKR,IAAL,GAAYS,KAApB;AAAA,qBAA3C;AACKjB,yBAASkB,GAAT,CAAa,UAACC,OAAD,EAAUC,CAAV;AAAA,2BACV;AAAA;AAAA,0BAAI,KAAKA,CAAT;AACI,sDAAC,gBAAD,eAAsBD,OAAtB,IAA+B,gBAAgBJ,cAA/C;AADJ,qBADU;AAAA,iBAAb;AADL,aADJ;AASH;;;;EA5BqB,gBAAMM,S;;AA+BhCpB,YAAYqB,SAAZ,GAAwB;AACpBtB,cAAU,oBAAUuB,MADA;AAEpBP,sBAAkB,oBAAUQ,SAAV,CAAoB,CAAC,oBAAUC,OAAX,EAAoB,oBAAUC,IAA9B,CAApB,CAFE;AAGpBX,oBAAgB,oBAAUS,SAAV,CAAoB,CAAC,oBAAUC,OAAX,EAAoB,oBAAUC,IAA9B,CAApB;AAHI,CAAxB;;kBAMe,yBAAQ3B,eAAR,EAAyBE,WAAzB,C","file":"index.js","sourcesContent":["// @ts-check\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { easeInOutQuad } from '../../utils/animation';\n\nconst mapStateToProps = ({ messages }) => {\n    return { messages: messages.messages };\n};\n\nclass MessageList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            offset: 0\n        };\n    }\n\n    componentDidUpdate() {\n        console.log('CHILDREN');\n        let targetOffset = [...this._ref.children].reduce(\n            (acc, curr) => acc + curr.offsetHeight,\n            0\n        );\n        this._ref.scrollTop = targetOffset;\n    }\n\n    render() {\n        let { messages, ImageComponent, MessageComponent } = this.props;\n        return (\n            <ul className=\"ChatContainer-content\" ref={ref => (this._ref = ref)}>\n                {messages.map((message, i) => (\n                    <li key={i}>\n                        <MessageComponent {...message} ImageComponent={ImageComponent} />\n                    </li>\n                ))}\n            </ul>\n        );\n    }\n}\n\nMessageList.PropTypes = {\n    messages: PropTypes.object,\n    MessageComponent: PropTypes.oneOfType([PropTypes.element, PropTypes.func]),\n    ImageComponent: PropTypes.oneOfType([PropTypes.element, PropTypes.func])\n};\n\nexport default connect(mapStateToProps)(MessageList);\n"]}